// Copyright 2025 The MathWorks, Inc.
// -------------------------------------------------------------
// 
// File Name: custom_hdl_prj\hdlsrc\pulse_detector_ipcore\PulseDet_dut.v
// Created: 2023-08-26 18:01:47
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PulseDet_dut
// Source Path: PulseDet/PulseDet_dut
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PulseDet_dut
          (clk,
           reset,
           dut_enable,
           stream_in_data_re,
           stream_in_data_im,
           stream_in_valid,
           threshold,
           output_length,
           stream_out_ready,
           ce_out,
           stream_out_data_re,
           stream_out_data_im,
           stream_out_valid,
           stream_in_ready,
           detected);


  input   clk;
  input   reset;
  input   dut_enable;  // ufix1
  input   signed [15:0] stream_in_data_re;  // sfix16_En14
  input   signed [15:0] stream_in_data_im;  // sfix16_En14
  input   stream_in_valid;  // ufix1
  input   signed [17:0] threshold;  // sfix18_En11
  input   [31:0] output_length;  // ufix32
  input   stream_out_ready;  // ufix1
  output  ce_out;  // ufix1
  output  signed [15:0] stream_out_data_re;  // sfix16_En14
  output  signed [15:0] stream_out_data_im;  // sfix16_En14
  output  stream_out_valid;  // ufix1
  output  stream_in_ready;  // ufix1
  output  detected;  // ufix1


  wire enb;
  wire ce_out_sig;  // ufix1
  wire signed [15:0] stream_out_data_re_sig;  // sfix16_En14
  wire signed [15:0] stream_out_data_im_sig;  // sfix16_En14
  wire stream_out_valid_sig;  // ufix1
  wire stream_in_ready_sig;  // ufix1
  wire detected_sig;  // ufix1


  assign enb = dut_enable;

  PulseDet_src_Pulse_Detector_IP u_PulseDet_src_Pulse_Detector_IP (.clk(clk),
                                                                   .clk_enable(enb),
                                                                   .reset(reset),
                                                                   .stream_in_data_re(stream_in_data_re),  // sfix16_En14
                                                                   .stream_in_data_im(stream_in_data_im),  // sfix16_En14
                                                                   .stream_in_valid(stream_in_valid),  // ufix1
                                                                   .threshold(threshold),  // sfix18_En11
                                                                   .output_length(output_length),  // ufix32
                                                                   .stream_out_ready(stream_out_ready),  // ufix1
                                                                   .ce_out(ce_out_sig),  // ufix1
                                                                   .stream_out_data_re(stream_out_data_re_sig),  // sfix16_En14
                                                                   .stream_out_data_im(stream_out_data_im_sig),  // sfix16_En14
                                                                   .stream_out_valid(stream_out_valid_sig),  // ufix1
                                                                   .stream_in_ready(stream_in_ready_sig),  // ufix1
                                                                   .detected(detected_sig)  // ufix1
                                                                   );

  assign ce_out = ce_out_sig;

  assign stream_out_data_re = stream_out_data_re_sig;

  assign stream_out_data_im = stream_out_data_im_sig;

  assign stream_out_valid = stream_out_valid_sig;

  assign stream_in_ready = stream_in_ready_sig;

  assign detected = detected_sig;

endmodule  // PulseDet_dut

