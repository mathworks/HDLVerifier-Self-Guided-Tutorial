// Copyright 2025 The MathWorks, Inc.
// -------------------------------------------------------------
// 
// File Name: custom_hdl_prj\hdlsrc\pulse_detector_ipcore\PulseDet_src_Pulse_Detector_IP.v
// Created: 2023-08-26 18:01:38
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// stream_out_data_re            ce_out        1
// stream_out_data_im            ce_out        1
// stream_out_valid              ce_out        1
// stream_in_ready               ce_out        1
// detected                      ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PulseDet_src_Pulse_Detector_IP
// Source Path: pulse_detector_ipcore/Pulse Detector IP
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PulseDet_src_Pulse_Detector_IP
          (clk,
           reset,
           clk_enable,
           stream_in_data_re,
           stream_in_data_im,
           stream_in_valid,
           threshold,
           output_length,
           stream_out_ready,
           ce_out,
           stream_out_data_re,
           stream_out_data_im,
           stream_out_valid,
           stream_in_ready,
           detected);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [15:0] stream_in_data_re;  // sfix16_En14
  input   signed [15:0] stream_in_data_im;  // sfix16_En14
  input   stream_in_valid;
  input   signed [17:0] threshold;  // sfix18_En11
  input   [31:0] output_length;  // uint32
  input   stream_out_ready;
  output  ce_out;
  output  signed [15:0] stream_out_data_re;  // sfix16_En14
  output  signed [15:0] stream_out_data_im;  // sfix16_En14
  output  stream_out_valid;
  output  stream_in_ready;
  output  detected;


  wire signed [15:0] From_Input_Stream_out1_re;  // sfix16_En14
  wire signed [15:0] From_Input_Stream_out1_im;  // sfix16_En14
  wire From_Input_Stream_out2;
  wire From_Input_Stream_out3;
  wire signed [15:0] Pulse_Detector_out1_re;  // sfix16_En14
  wire signed [15:0] Pulse_Detector_out1_im;  // sfix16_En14
  wire Pulse_Detector_out2;
  wire To_Output_Stream_out3;
  wire signed [15:0] Generate_Output_Frame_out1_re;  // sfix16_En14
  wire signed [15:0] Generate_Output_Frame_out1_im;  // sfix16_En14
  wire Generate_Output_Frame_out2;
  wire signed [15:0] To_Output_Stream_out1_re;  // sfix16_En14
  wire signed [15:0] To_Output_Stream_out1_im;  // sfix16_En14
  wire To_Output_Stream_out2;


  PulseDet_src_From_Input_Stream u_From_Input_Stream (.clk(clk),
                                                      .reset(reset),
                                                      .enb(clk_enable),
                                                      .stream_in_data_re(stream_in_data_re),  // sfix16_En14
                                                      .stream_in_data_im(stream_in_data_im),  // sfix16_En14
                                                      .stream_in_valid(stream_in_valid),
                                                      .data_re(From_Input_Stream_out1_re),  // sfix16_En14
                                                      .data_im(From_Input_Stream_out1_im),  // sfix16_En14
                                                      .valid(From_Input_Stream_out2),
                                                      .stream_in_ready(From_Input_Stream_out3)
                                                      );

  PulseDet_src_Pulse_Detector u_Pulse_Detector (.clk(clk),
                                                .reset(reset),
                                                .enb(clk_enable),
                                                .data_in_re(From_Input_Stream_out1_re),  // sfix16_En14
                                                .data_in_im(From_Input_Stream_out1_im),  // sfix16_En14
                                                .valid_in(From_Input_Stream_out2),
                                                .threshold(threshold),  // sfix18_En11
                                                .data_out_re(Pulse_Detector_out1_re),  // sfix16_En14
                                                .data_out_im(Pulse_Detector_out1_im),  // sfix16_En14
                                                .valid_out(Pulse_Detector_out2),
                                                .detected(detected)
                                                );

  PulseDet_src_Generate_Output_Frame u_Generate_Output_Frame (.clk(clk),
                                                              .reset(reset),
                                                              .enb(clk_enable),
                                                              .data_in_re(Pulse_Detector_out1_re),  // sfix16_En14
                                                              .data_in_im(Pulse_Detector_out1_im),  // sfix16_En14
                                                              .valid_in(Pulse_Detector_out2),
                                                              .detected(detected),
                                                              .length(output_length),  // uint32
                                                              .ready_in(To_Output_Stream_out3),
                                                              .data_out_re(Generate_Output_Frame_out1_re),  // sfix16_En14
                                                              .data_out_im(Generate_Output_Frame_out1_im),  // sfix16_En14
                                                              .valid_out(Generate_Output_Frame_out2)
                                                              );

  PulseDet_src_To_Output_Stream u_To_Output_Stream (.clk(clk),
                                                    .reset(reset),
                                                    .enb(clk_enable),
                                                    .data_re(Generate_Output_Frame_out1_re),  // sfix16_En14
                                                    .data_im(Generate_Output_Frame_out1_im),  // sfix16_En14
                                                    .valid(Generate_Output_Frame_out2),
                                                    .stream_out_ready(stream_out_ready),
                                                    .stream_out_data_re(To_Output_Stream_out1_re),  // sfix16_En14
                                                    .stream_out_data_im(To_Output_Stream_out1_im),  // sfix16_En14
                                                    .stream_out_valid(To_Output_Stream_out2),
                                                    .ready(To_Output_Stream_out3)
                                                    );

  assign stream_out_data_re = To_Output_Stream_out1_re;

  assign stream_out_data_im = To_Output_Stream_out1_im;

  assign stream_out_valid = To_Output_Stream_out2;

  assign stream_in_ready = From_Input_Stream_out3;

  assign ce_out = clk_enable;

endmodule  // PulseDet_src_Pulse_Detector_IP

