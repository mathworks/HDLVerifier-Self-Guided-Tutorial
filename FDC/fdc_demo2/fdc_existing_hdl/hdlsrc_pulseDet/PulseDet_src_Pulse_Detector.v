// Copyright 2025 The MathWorks, Inc.
// -------------------------------------------------------------
// 
// File Name: custom_hdl_prj\hdlsrc\pulse_detector_ipcore\PulseDet_src_Pulse_Detector.v
// Created: 2023-08-26 18:01:38
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PulseDet_src_Pulse_Detector
// Source Path: pulse_detector_ipcore/Pulse Detector IP/Pulse Detector
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PulseDet_src_Pulse_Detector
          (clk,
           reset,
           enb,
           data_in_re,
           data_in_im,
           valid_in,
           threshold,
           data_out_re,
           data_out_im,
           valid_out,
           detected);


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] data_in_re;  // sfix16_En14
  input   signed [15:0] data_in_im;  // sfix16_En14
  input   valid_in;
  input   signed [17:0] threshold;  // sfix18_En11
  output  signed [15:0] data_out_re;  // sfix16_En14
  output  signed [15:0] data_out_im;  // sfix16_En14
  output  valid_out;
  output  detected;


  wire signed [15:0] Matched_Filter_out1_re;  // sfix16_En14
  wire signed [15:0] Matched_Filter_out1_im;  // sfix16_En14
  wire signed [39:0] filter_out_re;  // sfix40_En37
  wire signed [39:0] filter_out_im;  // sfix40_En37
  wire filter_valid;
  wire signed [15:0] Compute_Power_out1_re;  // sfix16_En14
  wire signed [15:0] Compute_Power_out1_im;  // sfix16_En14
  wire signed [17:0] mag_sq_out;  // sfix18_En11
  wire Compute_Power_out3;
  wire signed [15:0] Local_Peak_out1_re;  // sfix16_En14
  wire signed [15:0] Local_Peak_out1_im;  // sfix16_En14
  wire Local_Peak_out4;


  PulseDet_src_Matched_Filter u_Matched_Filter (.clk(clk),
                                                .reset(reset),
                                                .enb(enb),
                                                .data_in_re(data_in_re),  // sfix16_En14
                                                .data_in_im(data_in_im),  // sfix16_En14
                                                .valid_in(valid_in),
                                                .data_out_re(Matched_Filter_out1_re),  // sfix16_En14
                                                .data_out_im(Matched_Filter_out1_im),  // sfix16_En14
                                                .filter_out_re(filter_out_re),  // sfix40_En37
                                                .filter_out_im(filter_out_im),  // sfix40_En37
                                                .valid_out(filter_valid)
                                                );

  PulseDet_src_Compute_Power u_Compute_Power (.clk(clk),
                                              .reset(reset),
                                              .enb(enb),
                                              .data_in_re(Matched_Filter_out1_re),  // sfix16_En14
                                              .data_in_im(Matched_Filter_out1_im),  // sfix16_En14
                                              .filter_in_re(filter_out_re),  // sfix40_En37
                                              .filter_in_im(filter_out_im),  // sfix40_En37
                                              .valid_in(filter_valid),
                                              .data_out_re(Compute_Power_out1_re),  // sfix16_En14
                                              .data_out_im(Compute_Power_out1_im),  // sfix16_En14
                                              .pow_out(mag_sq_out),  // sfix18_En11
                                              .valid_out(Compute_Power_out3)
                                              );

  PulseDet_src_Local_Peak u_Local_Peak (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .data_in_re(Compute_Power_out1_re),  // sfix16_En14
                                        .data_in_im(Compute_Power_out1_im),  // sfix16_En14
                                        .pow_in(mag_sq_out),  // sfix18_En11
                                        .valid_in(Compute_Power_out3),
                                        .threshold(threshold),  // sfix18_En11
                                        .data_out_re(Local_Peak_out1_re),  // sfix16_En14
                                        .data_out_im(Local_Peak_out1_im),  // sfix16_En14
                                        .detected(detected),
                                        .valid_out(Local_Peak_out4)
                                        );

  assign data_out_re = Local_Peak_out1_re;

  assign data_out_im = Local_Peak_out1_im;

  assign valid_out = Local_Peak_out4;

endmodule  // PulseDet_src_Pulse_Detector

