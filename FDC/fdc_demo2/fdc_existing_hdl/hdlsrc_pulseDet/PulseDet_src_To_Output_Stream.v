// Copyright 2025 The MathWorks, Inc.
// -------------------------------------------------------------
// 
// File Name: custom_hdl_prj\hdlsrc\pulse_detector_ipcore\PulseDet_src_To_Output_Stream.v
// Created: 2023-08-26 18:01:38
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PulseDet_src_To_Output_Stream
// Source Path: pulse_detector_ipcore/Pulse Detector IP/To Output Stream
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PulseDet_src_To_Output_Stream
          (clk,
           reset,
           enb,
           data_re,
           data_im,
           valid,
           stream_out_ready,
           stream_out_data_re,
           stream_out_data_im,
           stream_out_valid,
           ready);


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] data_re;  // sfix16_En14
  input   signed [15:0] data_im;  // sfix16_En14
  input   valid;
  input   stream_out_ready;
  output  signed [15:0] stream_out_data_re;  // sfix16_En14
  output  signed [15:0] stream_out_data_im;  // sfix16_En14
  output  stream_out_valid;
  output  ready;


  wire HDL_FIFO_out2;
  wire NOT_out1;
  wire AND_out1;
  wire signed [15:0] HDL_FIFO_out1_re;  // sfix16_En14
  wire signed [15:0] HDL_FIFO_out1_im;  // sfix16_En14
  wire [6:0] HDL_FIFO_out3;  // ufix7
  reg signed [15:0] Delay_out1_re;  // sfix16_En14
  reg signed [15:0] Delay_out1_im;  // sfix16_En14
  reg  Delay1_out1;
  wire Compare_To_Constant_out1;


  assign NOT_out1 =  ~ HDL_FIFO_out2;



  assign AND_out1 = NOT_out1 & stream_out_ready;



  PulseDet_src_HDL_FIFO u_HDL_FIFO (.clk(clk),
                                    .reset(reset),
                                    .enb(enb),
                                    .In_re(data_re),  // sfix16_En14
                                    .In_im(data_im),  // sfix16_En14
                                    .Push(valid),
                                    .Pop(AND_out1),
                                    .Out_re(HDL_FIFO_out1_re),  // sfix16_En14
                                    .Out_im(HDL_FIFO_out1_im),  // sfix16_En14
                                    .Empty(HDL_FIFO_out2),
                                    .Num(HDL_FIFO_out3)  // ufix7
                                    );

  always @(posedge clk)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1_re <= 16'sb0000000000000000;
        Delay_out1_im <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          Delay_out1_re <= HDL_FIFO_out1_re;
          Delay_out1_im <= HDL_FIFO_out1_im;
        end
      end
    end



  assign stream_out_data_re = Delay_out1_re;

  assign stream_out_data_im = Delay_out1_im;

  always @(posedge clk)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= AND_out1;
        end
      end
    end



  assign stream_out_valid = Delay1_out1;

  assign Compare_To_Constant_out1 = HDL_FIFO_out3 < 7'b0111111;



  assign ready = Compare_To_Constant_out1;

endmodule  // PulseDet_src_To_Output_Stream

